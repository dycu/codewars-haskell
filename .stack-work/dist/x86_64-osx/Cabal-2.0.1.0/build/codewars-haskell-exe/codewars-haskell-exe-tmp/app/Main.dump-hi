
==================== FINAL INTERFACE ====================
2018-03-27 12:51:01.083899 UTC

interface main:Main 8022
  interface hash: f00101ac775e2dc65f10b234487d743c
  ABI hash: 6fdef216b97f830ee783f66162f500ab
  export-list hash: effdb235f9179de11baf2963972e4613
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b3bbe8aec65759144b424510eda7f0cb
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies: TenMinuteWalk
package dependencies: base-4.10.1.0* codewars-haskell-0.1.0.0
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 525805ab19df5e4fe6d8de7dde9cb909
import  -/  codewars-haskell-0.1.0.0:Lib 556b5a012ee8d78af8235e940b552c4a
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  TenMinuteWalk 2aff5955632ab3f57d8ea9be869d9c3f
  exports: 0ec83a7c1a763082f7d6fd36eaa20d03
  calculateTargetLocation f1cfb9232203dd83e054c3d7dadbbc7d
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
ff364119cfa07eed9755360c15b81ed3
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
198c2771720ad03028827b7c90c88403
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True) -}
a639c9e39b4b19b20b7c869ee1db8f8b
  main2 :: GHC.Base.String
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)4
                   Main.main3) -}
ca5af39eb39485d2ee7112ad1ca45555
  main3 :: [GHC.Types.Char]
  {- Unfolding: (case GHC.Show.$w$cshowsPrec4
                        0#
                        Main.main_ww1
                        Main.main4 of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
9a5ecf098909b6882057089a3193a714
  main4 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.showList__1
                   Main.main5) -}
1009a1f40cca1c399f3037150e792735
  main5 :: GHC.Base.String
  {- Unfolding: (GHC.Show.$fShow(,)_$sgo1
                   Main.main7
                   Main.main6
                   (GHC.Types.[] @ GHC.Show.ShowS)) -}
ff2b0a7c08087dcb0b777f3eab7029f4
  main6 :: GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,U>m2,
     Unfolding: (\ (w2 :: GHC.Base.String)[OneShot] ->
                 case GHC.Show.$w$cshowsPrec4
                        0#
                        Main.main_ww7
                        w2 of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
d631c9ad93150620752635effd07c8eb
  main7 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)2
                   (GHC.Types.[] @ GHC.Types.Char)) -}
08b9803f71a42a830bab417d24836cb6
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
3a51c9d83634066f01c791d6ea58025f
  main_ww1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
4ec0b98fcb6b4cc1929836e2a0f98d23
  main_ww7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

