
==================== FINAL INTERFACE ====================
2018-03-27 12:51:01.017552 UTC

interface main:TenMinuteWalk 8022
  interface hash: dbdc3a4031945cfdec0ad8f00347aef6
  ABI hash: 2aff5955632ab3f57d8ea9be869d9c3f
  export-list hash: 0ec83a7c1a763082f7d6fd36eaa20d03
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b3e67e80a8a05bd09a3dcf1745013cec
  sig of: Nothing
  used TH splices: False
  where
exports:
  TenMinuteWalk.calculateTargetLocation
  TenMinuteWalk.isValidWalk
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
35f6604bd161f313816693a80efbffa9
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TenMinuteWalk.$trModule3
                   TenMinuteWalk.$trModule1) -}
a3e4779fd36cade927b7e9edbdce1d45
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TenMinuteWalk.$trModule2) -}
b1db6ebfb2adb87109fbfc58f5c3fa3c
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TenMinuteWalk"#) -}
2bb9c6c4719bc46cff58cd73d78a0a6f
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TenMinuteWalk.$trModule4) -}
84ce852b6f07456c3182538cf07b537e
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
f41db6b050942554a129ddebad38caac
  $wcalculateTargetLocation ::
    GHC.Num.Num a => a -> a -> GHC.Prim.Char# -> (# a, a #)
  {- Arity: 4,
     Strictness: <L,U(1*C1(C1(U)),1*C1(C1(U)),A,A,A,A,1*C1(U))><L,U><L,U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Num.Num a)
                   (ww :: a)
                   (ww1 :: a)
                   (ww2 :: GHC.Prim.Char#) ->
                 case ww2 of ds {
                   DEFAULT
                   -> case TenMinuteWalk.calculateTargetLocation2
                      ret_ty (# a, a #)
                      of {}
                   'e'#
                   -> (# GHC.Num.-
                           @ a
                           w
                           ww
                           (GHC.Num.fromInteger @ a w TenMinuteWalk.calculateTargetLocation1),
                         ww1 #)
                   'n'#
                   -> (# ww,
                         GHC.Num.+
                           @ a
                           w
                           ww1
                           (GHC.Num.fromInteger
                              @ a
                              w
                              TenMinuteWalk.calculateTargetLocation1) #)
                   's'#
                   -> (# ww,
                         GHC.Num.-
                           @ a
                           w
                           ww1
                           (GHC.Num.fromInteger
                              @ a
                              w
                              TenMinuteWalk.calculateTargetLocation1) #)
                   'w'#
                   -> (# GHC.Num.+
                           @ a
                           w
                           ww
                           (GHC.Num.fromInteger @ a w TenMinuteWalk.calculateTargetLocation1),
                         ww1 #) }) -}
f1cfb9232203dd83e054c3d7dadbbc7d
  calculateTargetLocation ::
    (GHC.Num.Num a, GHC.Show.Show a) =>
    (a, a) -> GHC.Types.Char -> (a, a)
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),C(C1(U)),A,A,A,A,C(U))><L,A><S,1*U(U,U)><S(S),1*U(1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.Show.Show a)
                   (w2 :: (a, a))
                   (w3 :: GHC.Types.Char) ->
                 case w2 of ww { (,) ww1 ww2 ->
                 case w3 of ww3 { GHC.Types.C# ww4 ->
                 case TenMinuteWalk.$wcalculateTargetLocation
                        @ a
                        w
                        ww1
                        ww2
                        ww4 of ww5 { (#,#) ww6 ww7 ->
                 (ww6, ww7) } } }) -}
5e460babe7768353f097b2148db8f844
  calculateTargetLocation1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
66b64291472549609bfac079967b0509
  calculateTargetLocation2 :: (a, a)
  {- Strictness: x -}
fd3a4a1b5f9502f066f3072a0311e03b
  isValidWalk :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ (walk :: [GHC.Types.Char]) -> TenMinuteWalk.isValidWalk1) -}
46b07963150d728971d5461f1ecf6dcb
  isValidWalk1 :: GHC.Types.Bool
  {- Strictness: x -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

